<?xml version='1.0' encoding='iso-8859-1' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.4.7">
  <compounddef id="classrapidxml_1_1xml__node" kind="class" prot="public">
    <compoundname>rapidxml::xml_node</compoundname>
    <basecompoundref refid="classrapidxml_1_1xml__base" prot="public" virt="non-virtual">xml_base&lt; Ch &gt;</basecompoundref>
    <derivedcompoundref refid="classrapidxml_1_1xml__document" prot="public" virt="non-virtual">xml_document</derivedcompoundref>
    <includes refid="rapidxml_8hpp" local="no">rapidxml.hpp</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>Ch</declname>
        <defname>Ch</defname>
        <defval>char</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrapidxml_1_1xml__node_34c55af3504549a475e5b9dfcaa6adf5_134c55af3504549a475e5b9dfcaa6adf5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>xml_node</definition>
        <argsstring>(node_type type)</argsstring>
        <name>xml_node</name>
        <param>
          <type><ref refid="namespacerapidxml_6a276b85e2da28c5f9c3dbce61c55682_16a276b85e2da28c5f9c3dbce61c55682" kindref="member">node_type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs an empty node with the specified type. Consider using <ref refid="classrapidxml_1_1memory__pool" kindref="compound">memory_pool</ref> of appropriate document to allocate nodes manually. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of node to construct. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/Sources/rapidxml/rapidxml.hpp" line="830" bodyfile="d:/Sources/rapidxml/rapidxml.hpp" bodystart="826" bodyend="831"/>
      </memberdef>
      <memberdef kind="function" id="classrapidxml_1_1xml__node_975e86937621ae4afe6a423219de30d0_1975e86937621ae4afe6a423219de30d0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacerapidxml_6a276b85e2da28c5f9c3dbce61c55682_16a276b85e2da28c5f9c3dbce61c55682" kindref="member">node_type</ref></type>
        <definition>node_type type</definition>
        <argsstring>() const </argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets type of node. <simplesect kind="return"><para>Type of node. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/Sources/rapidxml/rapidxml.hpp" line="839" bodyfile="d:/Sources/rapidxml/rapidxml.hpp" bodystart="838" bodyend="841"/>
        <referencedby refid="classrapidxml_1_1xml__node_86de2e22276826089b7baed2599f8dee_186de2e22276826089b7baed2599f8dee" compoundref="rapidxml_8hpp" startline="1022" endline="1038">xml_node::append_node</referencedby>
        <referencedby refid="classrapidxml_1_1memory__pool_95c49fcb056e9103ec906a59e3e01d76_195c49fcb056e9103ec906a59e3e01d76" compoundref="rapidxml_8hpp" startline="456" endline="479">memory_pool::clone_node</referencedby>
        <referencedby refid="classrapidxml_1_1xml__node_77aea7d8d996ba4f6bd61cc478a4e72d_177aea7d8d996ba4f6bd61cc478a4e72d" compoundref="rapidxml_8hpp" startline="848" endline="854">xml_node::document</referencedby>
        <referencedby refid="classrapidxml_1_1xml__node_780972a57fc447250ab47cc8f421b65e_1780972a57fc447250ab47cc8f421b65e" compoundref="rapidxml_8hpp" startline="1044" endline="1060">xml_node::insert_node</referencedby>
        <referencedby refid="classrapidxml_1_1xml__node_0c39df6617e709eb2fba11300dea63f2_10c39df6617e709eb2fba11300dea63f2" compoundref="rapidxml_8hpp" startline="1001" endline="1017">xml_node::prepend_node</referencedby>
      </memberdef>
      <memberdef kind="function" id="classrapidxml_1_1xml__node_77aea7d8d996ba4f6bd61cc478a4e72d_177aea7d8d996ba4f6bd61cc478a4e72d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrapidxml_1_1xml__document" kindref="compound">xml_document</ref>&lt; Ch &gt; *</type>
        <definition>xml_document&lt;Ch&gt;* document</definition>
        <argsstring>() const </argsstring>
        <name>document</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets document of which node is a child. <simplesect kind="return"><para>Pointer to document that contains this node, or 0 if there is no parent document. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/Sources/rapidxml/rapidxml.hpp" line="849" bodyfile="d:/Sources/rapidxml/rapidxml.hpp" bodystart="848" bodyend="854"/>
        <references refid="namespacerapidxml_6a276b85e2da28c5f9c3dbce61c55682_16a276b85e2da28c5f9c3dbce61c556820727d72be650e2fb7662beec8e92623a">rapidxml::node_document</references>
        <references refid="classrapidxml_1_1xml__base_798e8df7ea53ade4d9f0701017dce80e_1798e8df7ea53ade4d9f0701017dce80e" compoundref="rapidxml_8hpp" startline="695" endline="698">xml_base::parent</references>
        <references refid="classrapidxml_1_1xml__node_975e86937621ae4afe6a423219de30d0_1975e86937621ae4afe6a423219de30d0" compoundref="rapidxml_8hpp" startline="838" endline="841">xml_node::type</references>
      </memberdef>
      <memberdef kind="function" id="classrapidxml_1_1xml__node_7823e36687669e59c2afdf66334ef35a_17823e36687669e59c2afdf66334ef35a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrapidxml_1_1xml__node" kindref="compound">xml_node</ref>&lt; Ch &gt; *</type>
        <definition>xml_node&lt;Ch&gt;* first_node</definition>
        <argsstring>(const Ch *name=0, std::size_t name_size=0, bool case_sensitive=true) const </argsstring>
        <name>first_node</name>
        <param>
          <type>const Ch *</type>
          <declname>name</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>name_size</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>case_sensitive</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets first child node, optionally matching node name. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of child to find, or 0 to return first child regardless of its name; this string doesn&apos;t have to be zero-terminated if name_size is non-zero </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of name, in characters, or 0 to have size calculated automatically from string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>case_sensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>Should name comparison be case-sensitive; non case-sensitive comparison works properly only for ASCII characters </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to found child, or 0 if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/Sources/rapidxml/rapidxml.hpp" line="862" bodyfile="d:/Sources/rapidxml/rapidxml.hpp" bodystart="861" bodyend="874"/>
        <references refid="classrapidxml_1_1xml__base_622eade29fdf7806d3ef93ac4d90e707_1622eade29fdf7806d3ef93ac4d90e707" compoundref="rapidxml_8hpp" startline="601" endline="604">xml_base::name</references>
        <references refid="classrapidxml_1_1xml__base_0dae694c8f7e4d89f1003e2f3a15a43c_10dae694c8f7e4d89f1003e2f3a15a43c" compoundref="rapidxml_8hpp" startline="609" endline="612">xml_base::name_size</references>
        <referencedby refid="classrapidxml_1_1xml__node_86de2e22276826089b7baed2599f8dee_186de2e22276826089b7baed2599f8dee" compoundref="rapidxml_8hpp" startline="1022" endline="1038">xml_node::append_node</referencedby>
        <referencedby refid="classrapidxml_1_1memory__pool_95c49fcb056e9103ec906a59e3e01d76_195c49fcb056e9103ec906a59e3e01d76" compoundref="rapidxml_8hpp" startline="456" endline="479">memory_pool::clone_node</referencedby>
        <referencedby refid="classrapidxml_1_1xml__node_0c39df6617e709eb2fba11300dea63f2_10c39df6617e709eb2fba11300dea63f2" compoundref="rapidxml_8hpp" startline="1001" endline="1017">xml_node::prepend_node</referencedby>
        <referencedby refid="classrapidxml_1_1xml__node_0218147d13e41d5fa60ced4e7a7e9726_10218147d13e41d5fa60ced4e7a7e9726" compoundref="rapidxml_8hpp" startline="1113" endline="1118">xml_node::remove_all_nodes</referencedby>
        <referencedby refid="classrapidxml_1_1xml__node_9a31d861e1bddc710839c551a5d2b3a4_19a31d861e1bddc710839c551a5d2b3a4" compoundref="rapidxml_8hpp" startline="1065" endline="1075">xml_node::remove_first_node</referencedby>
        <referencedby refid="classrapidxml_1_1xml__node_87addf2bc127ee31aa4b5295d3c9b530_187addf2bc127ee31aa4b5295d3c9b530" compoundref="rapidxml_8hpp" startline="1080" endline="1092">xml_node::remove_last_node</referencedby>
        <referencedby refid="classrapidxml_1_1xml__node_9316463a2201631e7e2062b17729f9cd_19316463a2201631e7e2062b17729f9cd" compoundref="rapidxml_8hpp" startline="1096" endline="1110">xml_node::remove_node</referencedby>
      </memberdef>
      <memberdef kind="function" id="classrapidxml_1_1xml__node_fcb6e2209b591a36d2dadba20d2bc7cc_1fcb6e2209b591a36d2dadba20d2bc7cc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrapidxml_1_1xml__node" kindref="compound">xml_node</ref>&lt; Ch &gt; *</type>
        <definition>xml_node&lt;Ch&gt;* last_node</definition>
        <argsstring>(const Ch *name=0, std::size_t name_size=0, bool case_sensitive=true) const </argsstring>
        <name>last_node</name>
        <param>
          <type>const Ch *</type>
          <declname>name</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>name_size</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>case_sensitive</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets last child node, optionally matching node name. Behaviour is undefined if node has no children. Use <ref refid="classrapidxml_1_1xml__node_7823e36687669e59c2afdf66334ef35a_17823e36687669e59c2afdf66334ef35a" kindref="member">first_node()</ref> to test if node has children. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of child to find, or 0 to return last child regardless of its name; this string doesn&apos;t have to be zero-terminated if name_size is non-zero </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of name, in characters, or 0 to have size calculated automatically from string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>case_sensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>Should name comparison be case-sensitive; non case-sensitive comparison works properly only for ASCII characters </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to found child, or 0 if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/Sources/rapidxml/rapidxml.hpp" line="884" bodyfile="d:/Sources/rapidxml/rapidxml.hpp" bodystart="883" bodyend="897"/>
        <references refid="classrapidxml_1_1xml__base_622eade29fdf7806d3ef93ac4d90e707_1622eade29fdf7806d3ef93ac4d90e707" compoundref="rapidxml_8hpp" startline="601" endline="604">xml_base::name</references>
        <references refid="classrapidxml_1_1xml__base_0dae694c8f7e4d89f1003e2f3a15a43c_10dae694c8f7e4d89f1003e2f3a15a43c" compoundref="rapidxml_8hpp" startline="609" endline="612">xml_base::name_size</references>
      </memberdef>
      <memberdef kind="function" id="classrapidxml_1_1xml__node_ac2f6886c0107e9d5f156e9542546df6_1ac2f6886c0107e9d5f156e9542546df6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrapidxml_1_1xml__node" kindref="compound">xml_node</ref>&lt; Ch &gt; *</type>
        <definition>xml_node&lt;Ch&gt;* previous_sibling</definition>
        <argsstring>(const Ch *name=0, std::size_t name_size=0, bool case_sensitive=true) const </argsstring>
        <name>previous_sibling</name>
        <param>
          <type>const Ch *</type>
          <declname>name</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>name_size</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>case_sensitive</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets previous sibling node, optionally matching node name. Behaviour is undefined if node has no parent. Use <ref refid="classrapidxml_1_1xml__base_798e8df7ea53ade4d9f0701017dce80e_1798e8df7ea53ade4d9f0701017dce80e" kindref="member">parent()</ref> to test if node has a parent. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of sibling to find, or 0 to return previous sibling regardless of its name; this string doesn&apos;t have to be zero-terminated if name_size is non-zero </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of name, in characters, or 0 to have size calculated automatically from string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>case_sensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>Should name comparison be case-sensitive; non case-sensitive comparison works properly only for ASCII characters </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to found sibling, or 0 if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/Sources/rapidxml/rapidxml.hpp" line="907" bodyfile="d:/Sources/rapidxml/rapidxml.hpp" bodystart="906" bodyend="920"/>
        <references refid="classrapidxml_1_1xml__base_622eade29fdf7806d3ef93ac4d90e707_1622eade29fdf7806d3ef93ac4d90e707" compoundref="rapidxml_8hpp" startline="601" endline="604">xml_base::name</references>
        <references refid="classrapidxml_1_1xml__base_0dae694c8f7e4d89f1003e2f3a15a43c_10dae694c8f7e4d89f1003e2f3a15a43c" compoundref="rapidxml_8hpp" startline="609" endline="612">xml_base::name_size</references>
      </memberdef>
      <memberdef kind="function" id="classrapidxml_1_1xml__node_b3ead2cefecc03a813836203e3f6f38f_1b3ead2cefecc03a813836203e3f6f38f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrapidxml_1_1xml__node" kindref="compound">xml_node</ref>&lt; Ch &gt; *</type>
        <definition>xml_node&lt;Ch&gt;* next_sibling</definition>
        <argsstring>(const Ch *name=0, std::size_t name_size=0, bool case_sensitive=true) const </argsstring>
        <name>next_sibling</name>
        <param>
          <type>const Ch *</type>
          <declname>name</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>name_size</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>case_sensitive</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets next sibling node, optionally matching node name. Behaviour is undefined if node has no parent. Use <ref refid="classrapidxml_1_1xml__base_798e8df7ea53ade4d9f0701017dce80e_1798e8df7ea53ade4d9f0701017dce80e" kindref="member">parent()</ref> to test if node has a parent. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of sibling to find, or 0 to return next sibling regardless of its name; this string doesn&apos;t have to be zero-terminated if name_size is non-zero </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of name, in characters, or 0 to have size calculated automatically from string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>case_sensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>Should name comparison be case-sensitive; non case-sensitive comparison works properly only for ASCII characters </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to found sibling, or 0 if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/Sources/rapidxml/rapidxml.hpp" line="930" bodyfile="d:/Sources/rapidxml/rapidxml.hpp" bodystart="929" bodyend="943"/>
        <references refid="classrapidxml_1_1xml__base_622eade29fdf7806d3ef93ac4d90e707_1622eade29fdf7806d3ef93ac4d90e707" compoundref="rapidxml_8hpp" startline="601" endline="604">xml_base::name</references>
        <references refid="classrapidxml_1_1xml__base_0dae694c8f7e4d89f1003e2f3a15a43c_10dae694c8f7e4d89f1003e2f3a15a43c" compoundref="rapidxml_8hpp" startline="609" endline="612">xml_base::name_size</references>
      </memberdef>
      <memberdef kind="function" id="classrapidxml_1_1xml__node_5810a09f82f8d53efbe9456286dcec83_15810a09f82f8d53efbe9456286dcec83" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrapidxml_1_1xml__attribute" kindref="compound">xml_attribute</ref>&lt; Ch &gt; *</type>
        <definition>xml_attribute&lt;Ch&gt;* first_attribute</definition>
        <argsstring>(const Ch *name=0, std::size_t name_size=0, bool case_sensitive=true) const </argsstring>
        <name>first_attribute</name>
        <param>
          <type>const Ch *</type>
          <declname>name</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>name_size</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>case_sensitive</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets first attribute of node, optionally matching attribute name. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of attribute to find, or 0 to return first attribute regardless of its name; this string doesn&apos;t have to be zero-terminated if name_size is non-zero </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of name, in characters, or 0 to have size calculated automatically from string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>case_sensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>Should name comparison be case-sensitive; non case-sensitive comparison works properly only for ASCII characters </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to found attribute, or 0 if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/Sources/rapidxml/rapidxml.hpp" line="951" bodyfile="d:/Sources/rapidxml/rapidxml.hpp" bodystart="950" bodyend="963"/>
        <references refid="classrapidxml_1_1xml__base_622eade29fdf7806d3ef93ac4d90e707_1622eade29fdf7806d3ef93ac4d90e707" compoundref="rapidxml_8hpp" startline="601" endline="604">xml_base::name</references>
        <references refid="classrapidxml_1_1xml__base_0dae694c8f7e4d89f1003e2f3a15a43c_10dae694c8f7e4d89f1003e2f3a15a43c" compoundref="rapidxml_8hpp" startline="609" endline="612">xml_base::name_size</references>
        <referencedby refid="classrapidxml_1_1xml__node_8fbd4f5ef7169d493da9f8d87ac04b77_18fbd4f5ef7169d493da9f8d87ac04b77" compoundref="rapidxml_8hpp" startline="1142" endline="1158">xml_node::append_attribute</referencedby>
        <referencedby refid="classrapidxml_1_1memory__pool_95c49fcb056e9103ec906a59e3e01d76_195c49fcb056e9103ec906a59e3e01d76" compoundref="rapidxml_8hpp" startline="456" endline="479">memory_pool::clone_node</referencedby>
        <referencedby refid="classrapidxml_1_1xml__node_f6dffa513da74cc0be71a7ba84f8265e_1f6dffa513da74cc0be71a7ba84f8265e" compoundref="rapidxml_8hpp" startline="1122" endline="1138">xml_node::prepend_attribute</referencedby>
        <referencedby refid="classrapidxml_1_1xml__node_59e6ad4cfd5e8096c052e71d79561eda_159e6ad4cfd5e8096c052e71d79561eda" compoundref="rapidxml_8hpp" startline="1234" endline="1239">xml_node::remove_all_attributes</referencedby>
        <referencedby refid="classrapidxml_1_1xml__node_c75154db2e768c0e5b541fc8cd0775ab_1c75154db2e768c0e5b541fc8cd0775ab" compoundref="rapidxml_8hpp" startline="1218" endline="1231">xml_node::remove_attribute</referencedby>
        <referencedby refid="classrapidxml_1_1xml__node_4eea4a7f6cb484ca9944f7eafe6e1843_14eea4a7f6cb484ca9944f7eafe6e1843" compoundref="rapidxml_8hpp" startline="1185" endline="1197">xml_node::remove_first_attribute</referencedby>
        <referencedby refid="classrapidxml_1_1xml__node_37d87c4d5d89fa0cf05b72ee8d4cba3b_137d87c4d5d89fa0cf05b72ee8d4cba3b" compoundref="rapidxml_8hpp" startline="1202" endline="1214">xml_node::remove_last_attribute</referencedby>
      </memberdef>
      <memberdef kind="function" id="classrapidxml_1_1xml__node_16953d66751b5b949ee4ee2d9c0bc63a_116953d66751b5b949ee4ee2d9c0bc63a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classrapidxml_1_1xml__attribute" kindref="compound">xml_attribute</ref>&lt; Ch &gt; *</type>
        <definition>xml_attribute&lt;Ch&gt;* last_attribute</definition>
        <argsstring>(const Ch *name=0, std::size_t name_size=0, bool case_sensitive=true) const </argsstring>
        <name>last_attribute</name>
        <param>
          <type>const Ch *</type>
          <declname>name</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>name_size</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>case_sensitive</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets last attribute of node, optionally matching attribute name. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of attribute to find, or 0 to return last attribute regardless of its name; this string doesn&apos;t have to be zero-terminated if name_size is non-zero </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of name, in characters, or 0 to have size calculated automatically from string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>case_sensitive</parametername>
</parameternamelist>
<parameterdescription>
<para>Should name comparison be case-sensitive; non case-sensitive comparison works properly only for ASCII characters </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Pointer to found attribute, or 0 if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/Sources/rapidxml/rapidxml.hpp" line="971" bodyfile="d:/Sources/rapidxml/rapidxml.hpp" bodystart="970" bodyend="983"/>
        <references refid="classrapidxml_1_1xml__base_622eade29fdf7806d3ef93ac4d90e707_1622eade29fdf7806d3ef93ac4d90e707" compoundref="rapidxml_8hpp" startline="601" endline="604">xml_base::name</references>
        <references refid="classrapidxml_1_1xml__base_0dae694c8f7e4d89f1003e2f3a15a43c_10dae694c8f7e4d89f1003e2f3a15a43c" compoundref="rapidxml_8hpp" startline="609" endline="612">xml_base::name_size</references>
      </memberdef>
      <memberdef kind="function" id="classrapidxml_1_1xml__node_a78759bfa429fa2ab6bc5fe617cfa3cf_1a78759bfa429fa2ab6bc5fe617cfa3cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void type</definition>
        <argsstring>(node_type type)</argsstring>
        <name>type</name>
        <param>
          <type><ref refid="namespacerapidxml_6a276b85e2da28c5f9c3dbce61c55682_16a276b85e2da28c5f9c3dbce61c55682" kindref="member">node_type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets type of node. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of node to set. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/Sources/rapidxml/rapidxml.hpp" line="991" bodyfile="d:/Sources/rapidxml/rapidxml.hpp" bodystart="990" bodyend="993"/>
      </memberdef>
      <memberdef kind="function" id="classrapidxml_1_1xml__node_0c39df6617e709eb2fba11300dea63f2_10c39df6617e709eb2fba11300dea63f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void prepend_node</definition>
        <argsstring>(xml_node&lt; Ch &gt; *child)</argsstring>
        <name>prepend_node</name>
        <param>
          <type><ref refid="classrapidxml_1_1xml__node" kindref="compound">xml_node</ref>&lt; Ch &gt; *</type>
          <declname>child</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Prepends a new child node. The prepended child becomes the first child, and all existing children are moved one position back. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>child</parametername>
</parameternamelist>
<parameterdescription>
<para>Node to prepend. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/Sources/rapidxml/rapidxml.hpp" line="1002" bodyfile="d:/Sources/rapidxml/rapidxml.hpp" bodystart="1001" bodyend="1017"/>
        <references refid="classrapidxml_1_1xml__node_7823e36687669e59c2afdf66334ef35a_17823e36687669e59c2afdf66334ef35a" compoundref="rapidxml_8hpp" startline="861" endline="874">xml_node::first_node</references>
        <references refid="classrapidxml_1_1xml__node_c5a1aefc4bc26b7223df120e672f56c3_1c5a1aefc4bc26b7223df120e672f56c3" compoundref="rapidxml_8hpp" startline="1268">xml_node::m_next_sibling</references>
        <references refid="classrapidxml_1_1xml__base_1b2fdbb90cc0cc9135a8311c40d79bf9_11b2fdbb90cc0cc9135a8311c40d79bf9" compoundref="rapidxml_8hpp" startline="713">xml_base::m_parent</references>
        <references refid="classrapidxml_1_1xml__node_dadc9c77431484fb94058e8c8eea962c_1dadc9c77431484fb94058e8c8eea962c" compoundref="rapidxml_8hpp" startline="1267">xml_node::m_prev_sibling</references>
        <references refid="namespacerapidxml_6a276b85e2da28c5f9c3dbce61c55682_16a276b85e2da28c5f9c3dbce61c556820727d72be650e2fb7662beec8e92623a">rapidxml::node_document</references>
        <references refid="classrapidxml_1_1xml__base_798e8df7ea53ade4d9f0701017dce80e_1798e8df7ea53ade4d9f0701017dce80e" compoundref="rapidxml_8hpp" startline="695" endline="698">xml_base::parent</references>
        <references refid="classrapidxml_1_1xml__node_975e86937621ae4afe6a423219de30d0_1975e86937621ae4afe6a423219de30d0" compoundref="rapidxml_8hpp" startline="838" endline="841">xml_node::type</references>
        <referencedby refid="classrapidxml_1_1xml__node_780972a57fc447250ab47cc8f421b65e_1780972a57fc447250ab47cc8f421b65e" compoundref="rapidxml_8hpp" startline="1044" endline="1060">xml_node::insert_node</referencedby>
      </memberdef>
      <memberdef kind="function" id="classrapidxml_1_1xml__node_86de2e22276826089b7baed2599f8dee_186de2e22276826089b7baed2599f8dee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void append_node</definition>
        <argsstring>(xml_node&lt; Ch &gt; *child)</argsstring>
        <name>append_node</name>
        <param>
          <type><ref refid="classrapidxml_1_1xml__node" kindref="compound">xml_node</ref>&lt; Ch &gt; *</type>
          <declname>child</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Appends a new child node. The appended child becomes the last child. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>child</parametername>
</parameternamelist>
<parameterdescription>
<para>Node to append. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/Sources/rapidxml/rapidxml.hpp" line="1023" bodyfile="d:/Sources/rapidxml/rapidxml.hpp" bodystart="1022" bodyend="1038"/>
        <references refid="classrapidxml_1_1xml__node_7823e36687669e59c2afdf66334ef35a_17823e36687669e59c2afdf66334ef35a" compoundref="rapidxml_8hpp" startline="861" endline="874">xml_node::first_node</references>
        <references refid="classrapidxml_1_1xml__node_c5a1aefc4bc26b7223df120e672f56c3_1c5a1aefc4bc26b7223df120e672f56c3" compoundref="rapidxml_8hpp" startline="1268">xml_node::m_next_sibling</references>
        <references refid="classrapidxml_1_1xml__base_1b2fdbb90cc0cc9135a8311c40d79bf9_11b2fdbb90cc0cc9135a8311c40d79bf9" compoundref="rapidxml_8hpp" startline="713">xml_base::m_parent</references>
        <references refid="classrapidxml_1_1xml__node_dadc9c77431484fb94058e8c8eea962c_1dadc9c77431484fb94058e8c8eea962c" compoundref="rapidxml_8hpp" startline="1267">xml_node::m_prev_sibling</references>
        <references refid="namespacerapidxml_6a276b85e2da28c5f9c3dbce61c55682_16a276b85e2da28c5f9c3dbce61c556820727d72be650e2fb7662beec8e92623a">rapidxml::node_document</references>
        <references refid="classrapidxml_1_1xml__base_798e8df7ea53ade4d9f0701017dce80e_1798e8df7ea53ade4d9f0701017dce80e" compoundref="rapidxml_8hpp" startline="695" endline="698">xml_base::parent</references>
        <references refid="classrapidxml_1_1xml__node_975e86937621ae4afe6a423219de30d0_1975e86937621ae4afe6a423219de30d0" compoundref="rapidxml_8hpp" startline="838" endline="841">xml_node::type</references>
        <referencedby refid="classrapidxml_1_1xml__node_780972a57fc447250ab47cc8f421b65e_1780972a57fc447250ab47cc8f421b65e" compoundref="rapidxml_8hpp" startline="1044" endline="1060">xml_node::insert_node</referencedby>
        <referencedby refid="classrapidxml_1_1xml__document_8338ce6042e7b04d5a42144fb446b69c_18338ce6042e7b04d5a42144fb446b69c" compoundref="rapidxml_8hpp" startline="1306" endline="1336">xml_document::parse</referencedby>
      </memberdef>
      <memberdef kind="function" id="classrapidxml_1_1xml__node_780972a57fc447250ab47cc8f421b65e_1780972a57fc447250ab47cc8f421b65e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void insert_node</definition>
        <argsstring>(xml_node&lt; Ch &gt; *where, xml_node&lt; Ch &gt; *child)</argsstring>
        <name>insert_node</name>
        <param>
          <type><ref refid="classrapidxml_1_1xml__node" kindref="compound">xml_node</ref>&lt; Ch &gt; *</type>
          <declname>where</declname>
        </param>
        <param>
          <type><ref refid="classrapidxml_1_1xml__node" kindref="compound">xml_node</ref>&lt; Ch &gt; *</type>
          <declname>child</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inserts a new child node at specified place inside the node. All children after and including the specified node are moved one position back. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>where</parametername>
</parameternamelist>
<parameterdescription>
<para>Place where to insert the child, or 0 to insert at the back. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>child</parametername>
</parameternamelist>
<parameterdescription>
<para>Node to insert. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/Sources/rapidxml/rapidxml.hpp" line="1045" bodyfile="d:/Sources/rapidxml/rapidxml.hpp" bodystart="1044" bodyend="1060"/>
        <references refid="classrapidxml_1_1xml__node_86de2e22276826089b7baed2599f8dee_186de2e22276826089b7baed2599f8dee" compoundref="rapidxml_8hpp" startline="1022" endline="1038">xml_node::append_node</references>
        <references refid="classrapidxml_1_1xml__node_dadc9c77431484fb94058e8c8eea962c_1dadc9c77431484fb94058e8c8eea962c" compoundref="rapidxml_8hpp" startline="1267">xml_node::m_prev_sibling</references>
        <references refid="namespacerapidxml_6a276b85e2da28c5f9c3dbce61c55682_16a276b85e2da28c5f9c3dbce61c556820727d72be650e2fb7662beec8e92623a">rapidxml::node_document</references>
        <references refid="classrapidxml_1_1xml__base_798e8df7ea53ade4d9f0701017dce80e_1798e8df7ea53ade4d9f0701017dce80e" compoundref="rapidxml_8hpp" startline="695" endline="698">xml_base::parent</references>
        <references refid="classrapidxml_1_1xml__node_0c39df6617e709eb2fba11300dea63f2_10c39df6617e709eb2fba11300dea63f2" compoundref="rapidxml_8hpp" startline="1001" endline="1017">xml_node::prepend_node</references>
        <references refid="classrapidxml_1_1xml__node_975e86937621ae4afe6a423219de30d0_1975e86937621ae4afe6a423219de30d0" compoundref="rapidxml_8hpp" startline="838" endline="841">xml_node::type</references>
      </memberdef>
      <memberdef kind="function" id="classrapidxml_1_1xml__node_9a31d861e1bddc710839c551a5d2b3a4_19a31d861e1bddc710839c551a5d2b3a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void remove_first_node</definition>
        <argsstring>()</argsstring>
        <name>remove_first_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes first child node. If node has no children, behaviour is undefined. Use <ref refid="classrapidxml_1_1xml__node_7823e36687669e59c2afdf66334ef35a_17823e36687669e59c2afdf66334ef35a" kindref="member">first_node()</ref> to test if node has children. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/Sources/rapidxml/rapidxml.hpp" line="1066" bodyfile="d:/Sources/rapidxml/rapidxml.hpp" bodystart="1065" bodyend="1075"/>
        <references refid="classrapidxml_1_1xml__node_7823e36687669e59c2afdf66334ef35a_17823e36687669e59c2afdf66334ef35a" compoundref="rapidxml_8hpp" startline="861" endline="874">xml_node::first_node</references>
        <references refid="classrapidxml_1_1xml__node_c5a1aefc4bc26b7223df120e672f56c3_1c5a1aefc4bc26b7223df120e672f56c3" compoundref="rapidxml_8hpp" startline="1268">xml_node::m_next_sibling</references>
        <references refid="classrapidxml_1_1xml__base_1b2fdbb90cc0cc9135a8311c40d79bf9_11b2fdbb90cc0cc9135a8311c40d79bf9" compoundref="rapidxml_8hpp" startline="713">xml_base::m_parent</references>
        <referencedby refid="classrapidxml_1_1xml__node_9316463a2201631e7e2062b17729f9cd_19316463a2201631e7e2062b17729f9cd" compoundref="rapidxml_8hpp" startline="1096" endline="1110">xml_node::remove_node</referencedby>
      </memberdef>
      <memberdef kind="function" id="classrapidxml_1_1xml__node_87addf2bc127ee31aa4b5295d3c9b530_187addf2bc127ee31aa4b5295d3c9b530" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void remove_last_node</definition>
        <argsstring>()</argsstring>
        <name>remove_last_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes last child of the node. If node has no children, behaviour is undefined. Use <ref refid="classrapidxml_1_1xml__node_7823e36687669e59c2afdf66334ef35a_17823e36687669e59c2afdf66334ef35a" kindref="member">first_node()</ref> to test if node has children. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/Sources/rapidxml/rapidxml.hpp" line="1081" bodyfile="d:/Sources/rapidxml/rapidxml.hpp" bodystart="1080" bodyend="1092"/>
        <references refid="classrapidxml_1_1xml__node_7823e36687669e59c2afdf66334ef35a_17823e36687669e59c2afdf66334ef35a" compoundref="rapidxml_8hpp" startline="861" endline="874">xml_node::first_node</references>
        <references refid="classrapidxml_1_1xml__base_1b2fdbb90cc0cc9135a8311c40d79bf9_11b2fdbb90cc0cc9135a8311c40d79bf9" compoundref="rapidxml_8hpp" startline="713">xml_base::m_parent</references>
        <references refid="classrapidxml_1_1xml__node_dadc9c77431484fb94058e8c8eea962c_1dadc9c77431484fb94058e8c8eea962c" compoundref="rapidxml_8hpp" startline="1267">xml_node::m_prev_sibling</references>
        <referencedby refid="classrapidxml_1_1xml__node_9316463a2201631e7e2062b17729f9cd_19316463a2201631e7e2062b17729f9cd" compoundref="rapidxml_8hpp" startline="1096" endline="1110">xml_node::remove_node</referencedby>
      </memberdef>
      <memberdef kind="function" id="classrapidxml_1_1xml__node_9316463a2201631e7e2062b17729f9cd_19316463a2201631e7e2062b17729f9cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void remove_node</definition>
        <argsstring>(xml_node&lt; Ch &gt; *where)</argsstring>
        <name>remove_node</name>
        <param>
          <type><ref refid="classrapidxml_1_1xml__node" kindref="compound">xml_node</ref>&lt; Ch &gt; *</type>
          <declname>where</declname>
        </param>
        <briefdescription>
<para>Removes specified child from the node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/Sources/rapidxml/rapidxml.hpp" line="1097" bodyfile="d:/Sources/rapidxml/rapidxml.hpp" bodystart="1096" bodyend="1110"/>
        <references refid="classrapidxml_1_1xml__node_7823e36687669e59c2afdf66334ef35a_17823e36687669e59c2afdf66334ef35a" compoundref="rapidxml_8hpp" startline="861" endline="874">xml_node::first_node</references>
        <references refid="classrapidxml_1_1xml__node_c5a1aefc4bc26b7223df120e672f56c3_1c5a1aefc4bc26b7223df120e672f56c3" compoundref="rapidxml_8hpp" startline="1268">xml_node::m_next_sibling</references>
        <references refid="classrapidxml_1_1xml__base_1b2fdbb90cc0cc9135a8311c40d79bf9_11b2fdbb90cc0cc9135a8311c40d79bf9" compoundref="rapidxml_8hpp" startline="713">xml_base::m_parent</references>
        <references refid="classrapidxml_1_1xml__node_dadc9c77431484fb94058e8c8eea962c_1dadc9c77431484fb94058e8c8eea962c" compoundref="rapidxml_8hpp" startline="1267">xml_node::m_prev_sibling</references>
        <references refid="classrapidxml_1_1xml__base_798e8df7ea53ade4d9f0701017dce80e_1798e8df7ea53ade4d9f0701017dce80e" compoundref="rapidxml_8hpp" startline="695" endline="698">xml_base::parent</references>
        <references refid="classrapidxml_1_1xml__node_9a31d861e1bddc710839c551a5d2b3a4_19a31d861e1bddc710839c551a5d2b3a4" compoundref="rapidxml_8hpp" startline="1065" endline="1075">xml_node::remove_first_node</references>
        <references refid="classrapidxml_1_1xml__node_87addf2bc127ee31aa4b5295d3c9b530_187addf2bc127ee31aa4b5295d3c9b530" compoundref="rapidxml_8hpp" startline="1080" endline="1092">xml_node::remove_last_node</references>
      </memberdef>
      <memberdef kind="function" id="classrapidxml_1_1xml__node_0218147d13e41d5fa60ced4e7a7e9726_10218147d13e41d5fa60ced4e7a7e9726" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void remove_all_nodes</definition>
        <argsstring>()</argsstring>
        <name>remove_all_nodes</name>
        <briefdescription>
<para>Removes all child nodes (but not attributes). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/Sources/rapidxml/rapidxml.hpp" line="1114" bodyfile="d:/Sources/rapidxml/rapidxml.hpp" bodystart="1113" bodyend="1118"/>
        <references refid="classrapidxml_1_1xml__node_7823e36687669e59c2afdf66334ef35a_17823e36687669e59c2afdf66334ef35a" compoundref="rapidxml_8hpp" startline="861" endline="874">xml_node::first_node</references>
        <referencedby refid="classrapidxml_1_1xml__document_c8bb3912a3ce86b15842e79d0b421204_1c8bb3912a3ce86b15842e79d0b421204" compoundref="rapidxml_8hpp" startline="1340" endline="1345">xml_document::clear</referencedby>
        <referencedby refid="classrapidxml_1_1xml__document_8338ce6042e7b04d5a42144fb446b69c_18338ce6042e7b04d5a42144fb446b69c" compoundref="rapidxml_8hpp" startline="1306" endline="1336">xml_document::parse</referencedby>
      </memberdef>
      <memberdef kind="function" id="classrapidxml_1_1xml__node_f6dffa513da74cc0be71a7ba84f8265e_1f6dffa513da74cc0be71a7ba84f8265e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void prepend_attribute</definition>
        <argsstring>(xml_attribute&lt; Ch &gt; *attribute)</argsstring>
        <name>prepend_attribute</name>
        <param>
          <type><ref refid="classrapidxml_1_1xml__attribute" kindref="compound">xml_attribute</ref>&lt; Ch &gt; *</type>
          <declname>attribute</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Prepends a new attribute to the node. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attribute</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute to prepend. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/Sources/rapidxml/rapidxml.hpp" line="1123" bodyfile="d:/Sources/rapidxml/rapidxml.hpp" bodystart="1122" bodyend="1138"/>
        <references refid="classrapidxml_1_1xml__node_5810a09f82f8d53efbe9456286dcec83_15810a09f82f8d53efbe9456286dcec83" compoundref="rapidxml_8hpp" startline="950" endline="963">xml_node::first_attribute</references>
        <references refid="classrapidxml_1_1xml__attribute_707f986e627769458a6497a8e7861ad3_1707f986e627769458a6497a8e7861ad3" compoundref="rapidxml_8hpp" startline="799">xml_attribute::m_next_attribute</references>
        <references refid="classrapidxml_1_1xml__base_1b2fdbb90cc0cc9135a8311c40d79bf9_11b2fdbb90cc0cc9135a8311c40d79bf9" compoundref="rapidxml_8hpp" startline="713">xml_base::m_parent</references>
        <references refid="classrapidxml_1_1xml__attribute_d95cab11b952099a02fbf1b70e5fa71f_1d95cab11b952099a02fbf1b70e5fa71f" compoundref="rapidxml_8hpp" startline="798">xml_attribute::m_prev_attribute</references>
        <references refid="classrapidxml_1_1xml__base_798e8df7ea53ade4d9f0701017dce80e_1798e8df7ea53ade4d9f0701017dce80e" compoundref="rapidxml_8hpp" startline="695" endline="698">xml_base::parent</references>
        <referencedby refid="classrapidxml_1_1xml__node_070d5888b0557fe06a5b24961de1b988_1070d5888b0557fe06a5b24961de1b988" compoundref="rapidxml_8hpp" startline="1164" endline="1180">xml_node::insert_attribute</referencedby>
      </memberdef>
      <memberdef kind="function" id="classrapidxml_1_1xml__node_8fbd4f5ef7169d493da9f8d87ac04b77_18fbd4f5ef7169d493da9f8d87ac04b77" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void append_attribute</definition>
        <argsstring>(xml_attribute&lt; Ch &gt; *attribute)</argsstring>
        <name>append_attribute</name>
        <param>
          <type><ref refid="classrapidxml_1_1xml__attribute" kindref="compound">xml_attribute</ref>&lt; Ch &gt; *</type>
          <declname>attribute</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Appends a new attribute to the node. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attribute</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute to append. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/Sources/rapidxml/rapidxml.hpp" line="1143" bodyfile="d:/Sources/rapidxml/rapidxml.hpp" bodystart="1142" bodyend="1158"/>
        <references refid="classrapidxml_1_1xml__node_5810a09f82f8d53efbe9456286dcec83_15810a09f82f8d53efbe9456286dcec83" compoundref="rapidxml_8hpp" startline="950" endline="963">xml_node::first_attribute</references>
        <references refid="classrapidxml_1_1xml__attribute_707f986e627769458a6497a8e7861ad3_1707f986e627769458a6497a8e7861ad3" compoundref="rapidxml_8hpp" startline="799">xml_attribute::m_next_attribute</references>
        <references refid="classrapidxml_1_1xml__base_1b2fdbb90cc0cc9135a8311c40d79bf9_11b2fdbb90cc0cc9135a8311c40d79bf9" compoundref="rapidxml_8hpp" startline="713">xml_base::m_parent</references>
        <references refid="classrapidxml_1_1xml__attribute_d95cab11b952099a02fbf1b70e5fa71f_1d95cab11b952099a02fbf1b70e5fa71f" compoundref="rapidxml_8hpp" startline="798">xml_attribute::m_prev_attribute</references>
        <references refid="classrapidxml_1_1xml__base_798e8df7ea53ade4d9f0701017dce80e_1798e8df7ea53ade4d9f0701017dce80e" compoundref="rapidxml_8hpp" startline="695" endline="698">xml_base::parent</references>
        <referencedby refid="classrapidxml_1_1xml__node_070d5888b0557fe06a5b24961de1b988_1070d5888b0557fe06a5b24961de1b988" compoundref="rapidxml_8hpp" startline="1164" endline="1180">xml_node::insert_attribute</referencedby>
      </memberdef>
      <memberdef kind="function" id="classrapidxml_1_1xml__node_070d5888b0557fe06a5b24961de1b988_1070d5888b0557fe06a5b24961de1b988" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void insert_attribute</definition>
        <argsstring>(xml_attribute&lt; Ch &gt; *where, xml_attribute&lt; Ch &gt; *attribute)</argsstring>
        <name>insert_attribute</name>
        <param>
          <type><ref refid="classrapidxml_1_1xml__attribute" kindref="compound">xml_attribute</ref>&lt; Ch &gt; *</type>
          <declname>where</declname>
        </param>
        <param>
          <type><ref refid="classrapidxml_1_1xml__attribute" kindref="compound">xml_attribute</ref>&lt; Ch &gt; *</type>
          <declname>attribute</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inserts a new attribute at specified place inside the node. All attributes after and including the specified attribute are moved one position back. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>where</parametername>
</parameternamelist>
<parameterdescription>
<para>Place where to insert the attribute, or 0 to insert at the back. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attribute</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute to insert. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/Sources/rapidxml/rapidxml.hpp" line="1165" bodyfile="d:/Sources/rapidxml/rapidxml.hpp" bodystart="1164" bodyend="1180"/>
        <references refid="classrapidxml_1_1xml__node_8fbd4f5ef7169d493da9f8d87ac04b77_18fbd4f5ef7169d493da9f8d87ac04b77" compoundref="rapidxml_8hpp" startline="1142" endline="1158">xml_node::append_attribute</references>
        <references refid="classrapidxml_1_1xml__attribute_d95cab11b952099a02fbf1b70e5fa71f_1d95cab11b952099a02fbf1b70e5fa71f" compoundref="rapidxml_8hpp" startline="798">xml_attribute::m_prev_attribute</references>
        <references refid="classrapidxml_1_1xml__base_798e8df7ea53ade4d9f0701017dce80e_1798e8df7ea53ade4d9f0701017dce80e" compoundref="rapidxml_8hpp" startline="695" endline="698">xml_base::parent</references>
        <references refid="classrapidxml_1_1xml__node_f6dffa513da74cc0be71a7ba84f8265e_1f6dffa513da74cc0be71a7ba84f8265e" compoundref="rapidxml_8hpp" startline="1122" endline="1138">xml_node::prepend_attribute</references>
      </memberdef>
      <memberdef kind="function" id="classrapidxml_1_1xml__node_4eea4a7f6cb484ca9944f7eafe6e1843_14eea4a7f6cb484ca9944f7eafe6e1843" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void remove_first_attribute</definition>
        <argsstring>()</argsstring>
        <name>remove_first_attribute</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes first attribute of the node. If node has no attributes, behaviour is undefined. Use <ref refid="classrapidxml_1_1xml__node_5810a09f82f8d53efbe9456286dcec83_15810a09f82f8d53efbe9456286dcec83" kindref="member">first_attribute()</ref> to test if node has attributes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/Sources/rapidxml/rapidxml.hpp" line="1186" bodyfile="d:/Sources/rapidxml/rapidxml.hpp" bodystart="1185" bodyend="1197"/>
        <references refid="classrapidxml_1_1xml__node_5810a09f82f8d53efbe9456286dcec83_15810a09f82f8d53efbe9456286dcec83" compoundref="rapidxml_8hpp" startline="950" endline="963">xml_node::first_attribute</references>
        <references refid="classrapidxml_1_1xml__attribute_707f986e627769458a6497a8e7861ad3_1707f986e627769458a6497a8e7861ad3" compoundref="rapidxml_8hpp" startline="799">xml_attribute::m_next_attribute</references>
        <references refid="classrapidxml_1_1xml__base_1b2fdbb90cc0cc9135a8311c40d79bf9_11b2fdbb90cc0cc9135a8311c40d79bf9" compoundref="rapidxml_8hpp" startline="713">xml_base::m_parent</references>
        <referencedby refid="classrapidxml_1_1xml__node_c75154db2e768c0e5b541fc8cd0775ab_1c75154db2e768c0e5b541fc8cd0775ab" compoundref="rapidxml_8hpp" startline="1218" endline="1231">xml_node::remove_attribute</referencedby>
      </memberdef>
      <memberdef kind="function" id="classrapidxml_1_1xml__node_37d87c4d5d89fa0cf05b72ee8d4cba3b_137d87c4d5d89fa0cf05b72ee8d4cba3b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void remove_last_attribute</definition>
        <argsstring>()</argsstring>
        <name>remove_last_attribute</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes last attribute of the node. If node has no attributes, behaviour is undefined. Use <ref refid="classrapidxml_1_1xml__node_5810a09f82f8d53efbe9456286dcec83_15810a09f82f8d53efbe9456286dcec83" kindref="member">first_attribute()</ref> to test if node has attributes. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/Sources/rapidxml/rapidxml.hpp" line="1203" bodyfile="d:/Sources/rapidxml/rapidxml.hpp" bodystart="1202" bodyend="1214"/>
        <references refid="classrapidxml_1_1xml__node_5810a09f82f8d53efbe9456286dcec83_15810a09f82f8d53efbe9456286dcec83" compoundref="rapidxml_8hpp" startline="950" endline="963">xml_node::first_attribute</references>
        <references refid="classrapidxml_1_1xml__base_1b2fdbb90cc0cc9135a8311c40d79bf9_11b2fdbb90cc0cc9135a8311c40d79bf9" compoundref="rapidxml_8hpp" startline="713">xml_base::m_parent</references>
        <references refid="classrapidxml_1_1xml__attribute_d95cab11b952099a02fbf1b70e5fa71f_1d95cab11b952099a02fbf1b70e5fa71f" compoundref="rapidxml_8hpp" startline="798">xml_attribute::m_prev_attribute</references>
        <referencedby refid="classrapidxml_1_1xml__node_c75154db2e768c0e5b541fc8cd0775ab_1c75154db2e768c0e5b541fc8cd0775ab" compoundref="rapidxml_8hpp" startline="1218" endline="1231">xml_node::remove_attribute</referencedby>
      </memberdef>
      <memberdef kind="function" id="classrapidxml_1_1xml__node_c75154db2e768c0e5b541fc8cd0775ab_1c75154db2e768c0e5b541fc8cd0775ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void remove_attribute</definition>
        <argsstring>(xml_attribute&lt; Ch &gt; *where)</argsstring>
        <name>remove_attribute</name>
        <param>
          <type><ref refid="classrapidxml_1_1xml__attribute" kindref="compound">xml_attribute</ref>&lt; Ch &gt; *</type>
          <declname>where</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes specified attribute from node. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>where</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to attribute to be removed. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/Sources/rapidxml/rapidxml.hpp" line="1219" bodyfile="d:/Sources/rapidxml/rapidxml.hpp" bodystart="1218" bodyend="1231"/>
        <references refid="classrapidxml_1_1xml__node_5810a09f82f8d53efbe9456286dcec83_15810a09f82f8d53efbe9456286dcec83" compoundref="rapidxml_8hpp" startline="950" endline="963">xml_node::first_attribute</references>
        <references refid="classrapidxml_1_1xml__attribute_707f986e627769458a6497a8e7861ad3_1707f986e627769458a6497a8e7861ad3" compoundref="rapidxml_8hpp" startline="799">xml_attribute::m_next_attribute</references>
        <references refid="classrapidxml_1_1xml__base_1b2fdbb90cc0cc9135a8311c40d79bf9_11b2fdbb90cc0cc9135a8311c40d79bf9" compoundref="rapidxml_8hpp" startline="713">xml_base::m_parent</references>
        <references refid="classrapidxml_1_1xml__attribute_d95cab11b952099a02fbf1b70e5fa71f_1d95cab11b952099a02fbf1b70e5fa71f" compoundref="rapidxml_8hpp" startline="798">xml_attribute::m_prev_attribute</references>
        <references refid="classrapidxml_1_1xml__base_798e8df7ea53ade4d9f0701017dce80e_1798e8df7ea53ade4d9f0701017dce80e" compoundref="rapidxml_8hpp" startline="695" endline="698">xml_base::parent</references>
        <references refid="classrapidxml_1_1xml__node_4eea4a7f6cb484ca9944f7eafe6e1843_14eea4a7f6cb484ca9944f7eafe6e1843" compoundref="rapidxml_8hpp" startline="1185" endline="1197">xml_node::remove_first_attribute</references>
        <references refid="classrapidxml_1_1xml__node_37d87c4d5d89fa0cf05b72ee8d4cba3b_137d87c4d5d89fa0cf05b72ee8d4cba3b" compoundref="rapidxml_8hpp" startline="1202" endline="1214">xml_node::remove_last_attribute</references>
      </memberdef>
      <memberdef kind="function" id="classrapidxml_1_1xml__node_59e6ad4cfd5e8096c052e71d79561eda_159e6ad4cfd5e8096c052e71d79561eda" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void remove_all_attributes</definition>
        <argsstring>()</argsstring>
        <name>remove_all_attributes</name>
        <briefdescription>
<para>Removes all attributes of node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/Sources/rapidxml/rapidxml.hpp" line="1235" bodyfile="d:/Sources/rapidxml/rapidxml.hpp" bodystart="1234" bodyend="1239"/>
        <references refid="classrapidxml_1_1xml__node_5810a09f82f8d53efbe9456286dcec83_15810a09f82f8d53efbe9456286dcec83" compoundref="rapidxml_8hpp" startline="950" endline="963">xml_node::first_attribute</references>
        <referencedby refid="classrapidxml_1_1xml__document_c8bb3912a3ce86b15842e79d0b421204_1c8bb3912a3ce86b15842e79d0b421204" compoundref="rapidxml_8hpp" startline="1340" endline="1345">xml_document::clear</referencedby>
        <referencedby refid="classrapidxml_1_1xml__document_8338ce6042e7b04d5a42144fb446b69c_18338ce6042e7b04d5a42144fb446b69c" compoundref="rapidxml_8hpp" startline="1306" endline="1336">xml_document::parse</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classrapidxml_1_1xml__node_ec0647357c384cfeceb20abde1fc35c5_1ec0647357c384cfeceb20abde1fc35c5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xml_node</definition>
        <argsstring>(const xml_node &amp;)</argsstring>
        <name>xml_node</name>
        <param>
          <type>const <ref refid="classrapidxml_1_1xml__node" kindref="compound">xml_node</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/Sources/rapidxml/rapidxml.hpp" line="1247"/>
      </memberdef>
      <memberdef kind="function" id="classrapidxml_1_1xml__node_a0f61e3d0438a2d2e5dd3672e8ad84e9_1a0f61e3d0438a2d2e5dd3672e8ad84e9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void operator=</definition>
        <argsstring>(const xml_node &amp;)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classrapidxml_1_1xml__node" kindref="compound">xml_node</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/Sources/rapidxml/rapidxml.hpp" line="1248"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classrapidxml_1_1xml__node_62386a9aac750fcd7705fde78adcf352_162386a9aac750fcd7705fde78adcf352" prot="private" static="no" mutable="no">
        <type><ref refid="namespacerapidxml_6a276b85e2da28c5f9c3dbce61c55682_16a276b85e2da28c5f9c3dbce61c55682" kindref="member">node_type</ref></type>
        <definition>node_type m_type</definition>
        <argsstring></argsstring>
        <name>m_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/Sources/rapidxml/rapidxml.hpp" line="1262" bodyfile="d:/Sources/rapidxml/rapidxml.hpp" bodystart="1262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrapidxml_1_1xml__node_dfbb48e4fba8d7b256fb0610d550b657_1dfbb48e4fba8d7b256fb0610d550b657" prot="private" static="no" mutable="no">
        <type><ref refid="classrapidxml_1_1xml__node" kindref="compound">xml_node</ref>&lt; Ch &gt; *</type>
        <definition>xml_node&lt;Ch&gt;* m_first_node</definition>
        <argsstring></argsstring>
        <name>m_first_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/Sources/rapidxml/rapidxml.hpp" line="1263" bodyfile="d:/Sources/rapidxml/rapidxml.hpp" bodystart="1263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrapidxml_1_1xml__node_943e1a199d1b837a074e439ea02d35e9_1943e1a199d1b837a074e439ea02d35e9" prot="private" static="no" mutable="no">
        <type><ref refid="classrapidxml_1_1xml__node" kindref="compound">xml_node</ref>&lt; Ch &gt; *</type>
        <definition>xml_node&lt;Ch&gt;* m_last_node</definition>
        <argsstring></argsstring>
        <name>m_last_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/Sources/rapidxml/rapidxml.hpp" line="1264" bodyfile="d:/Sources/rapidxml/rapidxml.hpp" bodystart="1264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrapidxml_1_1xml__node_8a8a64135bcce1c64f14eb59fccc4bc3_18a8a64135bcce1c64f14eb59fccc4bc3" prot="private" static="no" mutable="no">
        <type><ref refid="classrapidxml_1_1xml__attribute" kindref="compound">xml_attribute</ref>&lt; Ch &gt; *</type>
        <definition>xml_attribute&lt;Ch&gt;* m_first_attribute</definition>
        <argsstring></argsstring>
        <name>m_first_attribute</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/Sources/rapidxml/rapidxml.hpp" line="1265" bodyfile="d:/Sources/rapidxml/rapidxml.hpp" bodystart="1265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrapidxml_1_1xml__node_09592a37dd2c90b8f1ae126b39d764fb_109592a37dd2c90b8f1ae126b39d764fb" prot="private" static="no" mutable="no">
        <type><ref refid="classrapidxml_1_1xml__attribute" kindref="compound">xml_attribute</ref>&lt; Ch &gt; *</type>
        <definition>xml_attribute&lt;Ch&gt;* m_last_attribute</definition>
        <argsstring></argsstring>
        <name>m_last_attribute</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/Sources/rapidxml/rapidxml.hpp" line="1266" bodyfile="d:/Sources/rapidxml/rapidxml.hpp" bodystart="1266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrapidxml_1_1xml__node_dadc9c77431484fb94058e8c8eea962c_1dadc9c77431484fb94058e8c8eea962c" prot="private" static="no" mutable="no">
        <type><ref refid="classrapidxml_1_1xml__node" kindref="compound">xml_node</ref>&lt; Ch &gt; *</type>
        <definition>xml_node&lt;Ch&gt;* m_prev_sibling</definition>
        <argsstring></argsstring>
        <name>m_prev_sibling</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/Sources/rapidxml/rapidxml.hpp" line="1267" bodyfile="d:/Sources/rapidxml/rapidxml.hpp" bodystart="1267" bodyend="-1"/>
        <referencedby refid="classrapidxml_1_1xml__node_86de2e22276826089b7baed2599f8dee_186de2e22276826089b7baed2599f8dee" compoundref="rapidxml_8hpp" startline="1022" endline="1038">xml_node::append_node</referencedby>
        <referencedby refid="classrapidxml_1_1xml__node_780972a57fc447250ab47cc8f421b65e_1780972a57fc447250ab47cc8f421b65e" compoundref="rapidxml_8hpp" startline="1044" endline="1060">xml_node::insert_node</referencedby>
        <referencedby refid="classrapidxml_1_1xml__node_0c39df6617e709eb2fba11300dea63f2_10c39df6617e709eb2fba11300dea63f2" compoundref="rapidxml_8hpp" startline="1001" endline="1017">xml_node::prepend_node</referencedby>
        <referencedby refid="classrapidxml_1_1xml__node_87addf2bc127ee31aa4b5295d3c9b530_187addf2bc127ee31aa4b5295d3c9b530" compoundref="rapidxml_8hpp" startline="1080" endline="1092">xml_node::remove_last_node</referencedby>
        <referencedby refid="classrapidxml_1_1xml__node_9316463a2201631e7e2062b17729f9cd_19316463a2201631e7e2062b17729f9cd" compoundref="rapidxml_8hpp" startline="1096" endline="1110">xml_node::remove_node</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classrapidxml_1_1xml__node_c5a1aefc4bc26b7223df120e672f56c3_1c5a1aefc4bc26b7223df120e672f56c3" prot="private" static="no" mutable="no">
        <type><ref refid="classrapidxml_1_1xml__node" kindref="compound">xml_node</ref>&lt; Ch &gt; *</type>
        <definition>xml_node&lt;Ch&gt;* m_next_sibling</definition>
        <argsstring></argsstring>
        <name>m_next_sibling</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="d:/Sources/rapidxml/rapidxml.hpp" line="1268" bodyfile="d:/Sources/rapidxml/rapidxml.hpp" bodystart="1268" bodyend="-1"/>
        <referencedby refid="classrapidxml_1_1xml__node_86de2e22276826089b7baed2599f8dee_186de2e22276826089b7baed2599f8dee" compoundref="rapidxml_8hpp" startline="1022" endline="1038">xml_node::append_node</referencedby>
        <referencedby refid="classrapidxml_1_1xml__node_0c39df6617e709eb2fba11300dea63f2_10c39df6617e709eb2fba11300dea63f2" compoundref="rapidxml_8hpp" startline="1001" endline="1017">xml_node::prepend_node</referencedby>
        <referencedby refid="classrapidxml_1_1xml__node_9a31d861e1bddc710839c551a5d2b3a4_19a31d861e1bddc710839c551a5d2b3a4" compoundref="rapidxml_8hpp" startline="1065" endline="1075">xml_node::remove_first_node</referencedby>
        <referencedby refid="classrapidxml_1_1xml__node_9316463a2201631e7e2062b17729f9cd_19316463a2201631e7e2062b17729f9cd" compoundref="rapidxml_8hpp" startline="1096" endline="1110">xml_node::remove_node</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Class representing a node of XML document. Each node may have associated name and value strings, which are available through <ref refid="classrapidxml_1_1xml__base_622eade29fdf7806d3ef93ac4d90e707_1622eade29fdf7806d3ef93ac4d90e707" kindref="member">name()</ref> and <ref refid="classrapidxml_1_1xml__base_c54fa4987fb503916a7b541eb15c9c7f_1c54fa4987fb503916a7b541eb15c9c7f" kindref="member">value()</ref> functions. Interpretation of name and value depends on type of the node. Type of node can be determined by using <ref refid="classrapidxml_1_1xml__node_975e86937621ae4afe6a423219de30d0_1975e86937621ae4afe6a423219de30d0" kindref="member">type()</ref> function. <linebreak/>
<linebreak/>
 Note that after parse, both name and value of node, if any, will point interior of source text used for parsing. Thus, this text must persist in the memory for the lifetime of node. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Ch</parametername>
</parameternamelist>
<parameterdescription>
<para>Character type to use. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="42">
        <label>xml_document&lt; Ch &gt;</label>
        <link refid="classrapidxml_1_1xml__document"/>
        <childnode refid="40" relation="public-inheritance">
        </childnode>
      </node>
      <node id="40">
        <label>xml_node</label>
        <link refid="classrapidxml_1_1xml__node"/>
        <childnode refid="41" relation="public-inheritance">
        </childnode>
      </node>
      <node id="41">
        <label>xml_base&lt; Ch &gt;</label>
        <link refid="classrapidxml_1_1xml__base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="43">
        <label>xml_node</label>
        <link refid="classrapidxml_1_1xml__node"/>
        <childnode refid="44" relation="public-inheritance">
        </childnode>
      </node>
      <node id="44">
        <label>xml_base&lt; Ch &gt;</label>
        <link refid="classrapidxml_1_1xml__base"/>
      </node>
    </collaborationgraph>
    <location file="d:/Sources/rapidxml/rapidxml.hpp" line="816" bodyfile="d:/Sources/rapidxml/rapidxml.hpp" bodystart="815" bodyend="1270"/>
    <listofallmembers>
      <member refid="classrapidxml_1_1xml__node_8fbd4f5ef7169d493da9f8d87ac04b77_18fbd4f5ef7169d493da9f8d87ac04b77" prot="public" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>append_attribute</name></member>
      <member refid="classrapidxml_1_1xml__node_86de2e22276826089b7baed2599f8dee_186de2e22276826089b7baed2599f8dee" prot="public" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>append_node</name></member>
      <member refid="classrapidxml_1_1xml__node_77aea7d8d996ba4f6bd61cc478a4e72d_177aea7d8d996ba4f6bd61cc478a4e72d" prot="public" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>document</name></member>
      <member refid="classrapidxml_1_1xml__node_5810a09f82f8d53efbe9456286dcec83_15810a09f82f8d53efbe9456286dcec83" prot="public" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>first_attribute</name></member>
      <member refid="classrapidxml_1_1xml__node_7823e36687669e59c2afdf66334ef35a_17823e36687669e59c2afdf66334ef35a" prot="public" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>first_node</name></member>
      <member refid="classrapidxml_1_1xml__node_070d5888b0557fe06a5b24961de1b988_1070d5888b0557fe06a5b24961de1b988" prot="public" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>insert_attribute</name></member>
      <member refid="classrapidxml_1_1xml__node_780972a57fc447250ab47cc8f421b65e_1780972a57fc447250ab47cc8f421b65e" prot="public" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>insert_node</name></member>
      <member refid="classrapidxml_1_1xml__node_16953d66751b5b949ee4ee2d9c0bc63a_116953d66751b5b949ee4ee2d9c0bc63a" prot="public" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>last_attribute</name></member>
      <member refid="classrapidxml_1_1xml__node_fcb6e2209b591a36d2dadba20d2bc7cc_1fcb6e2209b591a36d2dadba20d2bc7cc" prot="public" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>last_node</name></member>
      <member refid="classrapidxml_1_1xml__node_8a8a64135bcce1c64f14eb59fccc4bc3_18a8a64135bcce1c64f14eb59fccc4bc3" prot="private" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>m_first_attribute</name></member>
      <member refid="classrapidxml_1_1xml__node_dfbb48e4fba8d7b256fb0610d550b657_1dfbb48e4fba8d7b256fb0610d550b657" prot="private" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>m_first_node</name></member>
      <member refid="classrapidxml_1_1xml__node_09592a37dd2c90b8f1ae126b39d764fb_109592a37dd2c90b8f1ae126b39d764fb" prot="private" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>m_last_attribute</name></member>
      <member refid="classrapidxml_1_1xml__node_943e1a199d1b837a074e439ea02d35e9_1943e1a199d1b837a074e439ea02d35e9" prot="private" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>m_last_node</name></member>
      <member refid="classrapidxml_1_1xml__base_23053aafada985ece680d52694c63cdc_123053aafada985ece680d52694c63cdc" prot="protected" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>m_name</name></member>
      <member refid="classrapidxml_1_1xml__base_f67d7df13abd2eb30036a801b87d6f81_1f67d7df13abd2eb30036a801b87d6f81" prot="protected" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>m_name_size</name></member>
      <member refid="classrapidxml_1_1xml__node_c5a1aefc4bc26b7223df120e672f56c3_1c5a1aefc4bc26b7223df120e672f56c3" prot="private" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>m_next_sibling</name></member>
      <member refid="classrapidxml_1_1xml__base_1b2fdbb90cc0cc9135a8311c40d79bf9_11b2fdbb90cc0cc9135a8311c40d79bf9" prot="protected" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>m_parent</name></member>
      <member refid="classrapidxml_1_1xml__node_dadc9c77431484fb94058e8c8eea962c_1dadc9c77431484fb94058e8c8eea962c" prot="private" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>m_prev_sibling</name></member>
      <member refid="classrapidxml_1_1xml__node_62386a9aac750fcd7705fde78adcf352_162386a9aac750fcd7705fde78adcf352" prot="private" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>m_type</name></member>
      <member refid="classrapidxml_1_1xml__base_8fbc9ba6b320f64f4bdab09469a9e623_18fbc9ba6b320f64f4bdab09469a9e623" prot="protected" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>m_value</name></member>
      <member refid="classrapidxml_1_1xml__base_643295fc68623ed58e2db3551d44fef0_1643295fc68623ed58e2db3551d44fef0" prot="protected" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>m_value_size</name></member>
      <member refid="classrapidxml_1_1xml__base_622eade29fdf7806d3ef93ac4d90e707_1622eade29fdf7806d3ef93ac4d90e707" prot="public" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>name</name></member>
      <member refid="classrapidxml_1_1xml__base_4e7e23d06d48126c65b1f6266acfba5c_14e7e23d06d48126c65b1f6266acfba5c" prot="public" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>name</name></member>
      <member refid="classrapidxml_1_1xml__base_e099c291e104a0d277307fe71f5e0f9e_1e099c291e104a0d277307fe71f5e0f9e" prot="public" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>name</name></member>
      <member refid="classrapidxml_1_1xml__base_0dae694c8f7e4d89f1003e2f3a15a43c_10dae694c8f7e4d89f1003e2f3a15a43c" prot="public" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>name_size</name></member>
      <member refid="classrapidxml_1_1xml__node_b3ead2cefecc03a813836203e3f6f38f_1b3ead2cefecc03a813836203e3f6f38f" prot="public" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>next_sibling</name></member>
      <member refid="classrapidxml_1_1xml__base_641d0b8df8e0c3c7e0db06ced0e0749f_1641d0b8df8e0c3c7e0db06ced0e0749f" prot="protected" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>nullstr</name></member>
      <member refid="classrapidxml_1_1xml__node_a0f61e3d0438a2d2e5dd3672e8ad84e9_1a0f61e3d0438a2d2e5dd3672e8ad84e9" prot="private" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>operator=</name></member>
      <member refid="classrapidxml_1_1xml__base_798e8df7ea53ade4d9f0701017dce80e_1798e8df7ea53ade4d9f0701017dce80e" prot="public" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>parent</name></member>
      <member refid="classrapidxml_1_1xml__node_f6dffa513da74cc0be71a7ba84f8265e_1f6dffa513da74cc0be71a7ba84f8265e" prot="public" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>prepend_attribute</name></member>
      <member refid="classrapidxml_1_1xml__node_0c39df6617e709eb2fba11300dea63f2_10c39df6617e709eb2fba11300dea63f2" prot="public" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>prepend_node</name></member>
      <member refid="classrapidxml_1_1xml__node_ac2f6886c0107e9d5f156e9542546df6_1ac2f6886c0107e9d5f156e9542546df6" prot="public" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>previous_sibling</name></member>
      <member refid="classrapidxml_1_1xml__node_59e6ad4cfd5e8096c052e71d79561eda_159e6ad4cfd5e8096c052e71d79561eda" prot="public" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>remove_all_attributes</name></member>
      <member refid="classrapidxml_1_1xml__node_0218147d13e41d5fa60ced4e7a7e9726_10218147d13e41d5fa60ced4e7a7e9726" prot="public" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>remove_all_nodes</name></member>
      <member refid="classrapidxml_1_1xml__node_c75154db2e768c0e5b541fc8cd0775ab_1c75154db2e768c0e5b541fc8cd0775ab" prot="public" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>remove_attribute</name></member>
      <member refid="classrapidxml_1_1xml__node_4eea4a7f6cb484ca9944f7eafe6e1843_14eea4a7f6cb484ca9944f7eafe6e1843" prot="public" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>remove_first_attribute</name></member>
      <member refid="classrapidxml_1_1xml__node_9a31d861e1bddc710839c551a5d2b3a4_19a31d861e1bddc710839c551a5d2b3a4" prot="public" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>remove_first_node</name></member>
      <member refid="classrapidxml_1_1xml__node_37d87c4d5d89fa0cf05b72ee8d4cba3b_137d87c4d5d89fa0cf05b72ee8d4cba3b" prot="public" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>remove_last_attribute</name></member>
      <member refid="classrapidxml_1_1xml__node_87addf2bc127ee31aa4b5295d3c9b530_187addf2bc127ee31aa4b5295d3c9b530" prot="public" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>remove_last_node</name></member>
      <member refid="classrapidxml_1_1xml__node_9316463a2201631e7e2062b17729f9cd_19316463a2201631e7e2062b17729f9cd" prot="public" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>remove_node</name></member>
      <member refid="classrapidxml_1_1xml__node_975e86937621ae4afe6a423219de30d0_1975e86937621ae4afe6a423219de30d0" prot="public" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>type</name></member>
      <member refid="classrapidxml_1_1xml__node_a78759bfa429fa2ab6bc5fe617cfa3cf_1a78759bfa429fa2ab6bc5fe617cfa3cf" prot="public" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>type</name></member>
      <member refid="classrapidxml_1_1xml__base_c54fa4987fb503916a7b541eb15c9c7f_1c54fa4987fb503916a7b541eb15c9c7f" prot="public" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>value</name></member>
      <member refid="classrapidxml_1_1xml__base_d9640aa3f5374673cb72a5289b6c91eb_1d9640aa3f5374673cb72a5289b6c91eb" prot="public" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>value</name></member>
      <member refid="classrapidxml_1_1xml__base_18c7469acdca771de9b4f3054053029c_118c7469acdca771de9b4f3054053029c" prot="public" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>value</name></member>
      <member refid="classrapidxml_1_1xml__base_aed5ae791b7164c1ee5e649198cbb3db_1aed5ae791b7164c1ee5e649198cbb3db" prot="public" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>value_size</name></member>
      <member refid="classrapidxml_1_1xml__base_23630d2c130a9e0e3f3afa7584a9b218_123630d2c130a9e0e3f3afa7584a9b218" prot="public" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>xml_base</name></member>
      <member refid="classrapidxml_1_1xml__node_34c55af3504549a475e5b9dfcaa6adf5_134c55af3504549a475e5b9dfcaa6adf5" prot="public" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>xml_node</name></member>
      <member refid="classrapidxml_1_1xml__node_ec0647357c384cfeceb20abde1fc35c5_1ec0647357c384cfeceb20abde1fc35c5" prot="private" virt="non-virtual"><scope>rapidxml::xml_node</scope><name>xml_node</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
